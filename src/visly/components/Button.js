// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
/* tslint:disable */
/* eslint-disable */
import "../textstyles/fonts.css";
import "./reset.css";
import "./Button.css";
import React, { createContext, useContext } from "react";
import {
  exists,
  findSetVariantProps,
  makeCompositeDefaultProps,
} from "./_internal_utils";
import {
  TextPrimitive,
  ContainerPrimitive,
  IconPrimitive,
} from "./_internal_primitives";
import { ButtonRoot } from "./_internal_button";

const styles = [
  {
    type: "default",
    layers: {
      N8uzR3KC4w: {
        none: {
          text: "CTA",
        },
      },
      RKYeD7tVFf: {
        none: {
          role: "img",
          src: require("../assets/335f3298-73c2-4b49-87f0-bdd5380a4035@1x.svg"),
          useMask: true,
        },
      },
    },
  },
];

const defaultPropValues = [
  {
    type: "default",
    layers: {},
  },
];

const variantPropTypes = [];

export const ButtonContext = createContext(null);

function Button(_props) {
  const defaults = useContext(ButtonContext);
  const props = { ...defaults, ..._props };
  const activeVariants = findSetVariantProps(variantPropTypes, props);
  const getCompositeDefaultProps = makeCompositeDefaultProps(
    defaultPropValues,
    activeVariants
  );
  return (
    <ButtonRoot
      {...props}
      key="root"
      addSpacing={false}
      internal={{
        styles: styles,
        layerId: "root",
        scope: "PZg7dLeuth",
        activeVariants: activeVariants,
      }}
    >
      {(getStyle) => (
        <ContainerPrimitive
          className={"__visly_reset __visly_scope_PZg7dLeuth_XTT5obrMD3"}
          key={"XTT5obrMD3"}
          addSpacing={true}
        >
          <TextPrimitive
            className={"__visly_reset __visly_scope_PZg7dLeuth_N8uzR3KC4w"}
            key={"N8uzR3KC4w"}
            text={
              exists(props.label) ? props.label : getStyle("N8uzR3KC4w", "text")
            }
          />
          <IconPrimitive
            className={"__visly_reset __visly_scope_PZg7dLeuth_RKYeD7tVFf"}
            key={"RKYeD7tVFf"}
            useMask={getStyle("RKYeD7tVFf", "useMask")}
            src={
              exists(props.icon) ? props.icon : getStyle("RKYeD7tVFf", "src")
            }
          />
        </ContainerPrimitive>
      )}
    </ButtonRoot>
  );
}

Button.__variants = [];

export default Button;
